name: 'Configure wl2 CLI'
description: 'Configure the wl2 cli to interact with Wonderland 2'
inputs:
  cli-version:
    required: false
    description: 'The Wonderland 2 CLI version to use'
    default: 'latest'
  environment:
    default: 'prod'
    description: 'The dev environment to be used (prod|stage)'
    required: false

runs:
  using: "composite"
  steps:
    - name: Fetch Wonderland 2 deployment secrets from Vault
      id: wl2-secrets
      uses: hashicorp/vault-action@v2.4.0
      with:
        url: https://vault.jimdo-platform.net
        method: jwt
        role: github_jimdo
        secrets: |
          secret/github/jimdo-bot GITHUB_TOKEN | WONDERLAND_GITHUB_TOKEN ;
          secret/github/jimdo-bot SSH_KEY | WONDERLAND_SSH_KEY ;

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ steps.wl2-secrets.outputs.WONDERLAND_SSH_KEY }}

    - name: Install WL2 cli
      run: |
        version=${{ inputs.cli-version }}
        if [ $version != "latest" ]; then version="tags/${{ inputs.cli-version }}"; fi;
        asset_url=$(curl -s -H "Authorization: token ${{ steps.wl2-secrets.outputs.WONDERLAND_GITHUB_TOKEN }}"\
                    https://api.github.com/repos/Jimdo/wonderland2-cli/releases/$version\
                    | jq -r '.assets[] | select (.name=="wl2-linux-amd64").url')
        mkdir -p /home/runner/.local/bin
        curl -sSLfo /home/runner/.local/bin/wl2 -H "Authorization: token ${{ steps.wl2-secrets.outputs.WONDERLAND_GITHUB_TOKEN }}" -H "Accept:application/octet-stream" $asset_url
        chmod +x /home/runner/.local/bin/wl2
        echo "WL2_ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV
        echo "WONDERLAND_AUTH_METHOD=github-ci" >> $GITHUB_ENV
      shell: bash

    - name: Show information on the active configuration
      run: |
        wl2 version
      shell: bash
